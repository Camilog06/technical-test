import {
  takeEvery$1
} from "./chunk-NXDDVVHC.js";
import {
  all,
  call,
  put,
  race,
  take
} from "./chunk-77Z63PU3.js";
import "./chunk-7VJL2KN5.js";
import {
  __commonJS,
  __toESM
} from "./chunk-AUZ3RYOM.js";

// node_modules/.pnpm/invariant@2.2.4/node_modules/invariant/browser.js
var require_browser = __commonJS({
  "node_modules/.pnpm/invariant@2.2.4/node_modules/invariant/browser.js"(exports, module) {
    "use strict";
    var invariant6 = function(condition, format, a, b, c, d, e, f) {
      if (true) {
        if (format === void 0) {
          throw new Error("invariant requires an error message argument");
        }
      }
      if (!condition) {
        var error;
        if (format === void 0) {
          error = new Error(
            "Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings."
          );
        } else {
          var args = [a, b, c, d, e, f];
          var argIndex = 0;
          error = new Error(
            format.replace(/%s/g, function() {
              return args[argIndex++];
            })
          );
          error.name = "Invariant Violation";
        }
        error.framesToPop = 1;
        throw error;
      }
    };
    module.exports = invariant6;
  }
});

// node_modules/.pnpm/to-no-case@1.0.2/node_modules/to-no-case/index.js
var require_to_no_case = __commonJS({
  "node_modules/.pnpm/to-no-case@1.0.2/node_modules/to-no-case/index.js"(exports, module) {
    module.exports = toNoCase;
    var hasSpace = /\s/;
    var hasSeparator = /(_|-|\.|:)/;
    var hasCamel = /([a-z][A-Z]|[A-Z][a-z])/;
    function toNoCase(string) {
      if (hasSpace.test(string))
        return string.toLowerCase();
      if (hasSeparator.test(string))
        return (unseparate(string) || string).toLowerCase();
      if (hasCamel.test(string))
        return uncamelize(string).toLowerCase();
      return string.toLowerCase();
    }
    var separatorSplitter = /[\W_]+(.|$)/g;
    function unseparate(string) {
      return string.replace(separatorSplitter, function(m, next) {
        return next ? " " + next : "";
      });
    }
    var camelSplitter = /(.)([A-Z]+)/g;
    function uncamelize(string) {
      return string.replace(camelSplitter, function(m, previous, uppers) {
        return previous + " " + uppers.toLowerCase().split("").join(" ");
      });
    }
  }
});

// node_modules/.pnpm/to-space-case@1.0.0/node_modules/to-space-case/index.js
var require_to_space_case = __commonJS({
  "node_modules/.pnpm/to-space-case@1.0.0/node_modules/to-space-case/index.js"(exports, module) {
    var clean = require_to_no_case();
    module.exports = toSpaceCase;
    function toSpaceCase(string) {
      return clean(string).replace(/[\W_]+(.|$)/g, function(matches, match) {
        return match ? " " + match : "";
      }).trim();
    }
  }
});

// node_modules/.pnpm/to-camel-case@1.0.0/node_modules/to-camel-case/index.js
var require_to_camel_case = __commonJS({
  "node_modules/.pnpm/to-camel-case@1.0.0/node_modules/to-camel-case/index.js"(exports, module) {
    var space = require_to_space_case();
    module.exports = toCamelCase3;
    function toCamelCase3(string) {
      return space(string).replace(/\s(\w)/g, function(matches, letter) {
        return letter.toUpperCase();
      });
    }
  }
});

// node_modules/.pnpm/just-curry-it@3.2.1/node_modules/just-curry-it/index.js
var require_just_curry_it = __commonJS({
  "node_modules/.pnpm/just-curry-it@3.2.1/node_modules/just-curry-it/index.js"(exports, module) {
    module.exports = curry2;
    function curry2(fn, arity) {
      return function curried() {
        if (arity == null) {
          arity = fn.length;
        }
        var args = [].slice.call(arguments);
        if (args.length >= arity) {
          return fn.apply(this, args);
        } else {
          return function() {
            return curried.apply(this, args.concat([].slice.call(arguments)));
          };
        }
      };
    }
  }
});

// node_modules/.pnpm/@babel+runtime@7.22.15/node_modules/@babel/runtime/helpers/typeof.js
var require_typeof = __commonJS({
  "node_modules/.pnpm/@babel+runtime@7.22.15/node_modules/@babel/runtime/helpers/typeof.js"(exports, module) {
    function _typeof(o) {
      "@babel/helpers - typeof";
      return module.exports = _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, module.exports.__esModule = true, module.exports["default"] = module.exports, _typeof(o);
    }
    module.exports = _typeof, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/.pnpm/@babel+runtime@7.22.15/node_modules/@babel/runtime/helpers/regeneratorRuntime.js
var require_regeneratorRuntime = __commonJS({
  "node_modules/.pnpm/@babel+runtime@7.22.15/node_modules/@babel/runtime/helpers/regeneratorRuntime.js"(exports, module) {
    var _typeof = require_typeof()["default"];
    function _regeneratorRuntime2() {
      "use strict";
      module.exports = _regeneratorRuntime2 = function _regeneratorRuntime3() {
        return e;
      }, module.exports.__esModule = true, module.exports["default"] = module.exports;
      var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function(t2, e2, r2) {
        t2[e2] = r2.value;
      }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag";
      function define(t2, e2, r2) {
        return Object.defineProperty(t2, e2, {
          value: r2,
          enumerable: true,
          configurable: true,
          writable: true
        }), t2[e2];
      }
      try {
        define({}, "");
      } catch (t2) {
        define = function define2(t3, e2, r2) {
          return t3[e2] = r2;
        };
      }
      function wrap(t2, e2, r2, n2) {
        var i2 = e2 && e2.prototype instanceof Generator ? e2 : Generator, a2 = Object.create(i2.prototype), c2 = new Context(n2 || []);
        return o(a2, "_invoke", {
          value: makeInvokeMethod(t2, r2, c2)
        }), a2;
      }
      function tryCatch(t2, e2, r2) {
        try {
          return {
            type: "normal",
            arg: t2.call(e2, r2)
          };
        } catch (t3) {
          return {
            type: "throw",
            arg: t3
          };
        }
      }
      e.wrap = wrap;
      var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {};
      function Generator() {
      }
      function GeneratorFunction() {
      }
      function GeneratorFunctionPrototype() {
      }
      var p = {};
      define(p, a, function() {
        return this;
      });
      var d = Object.getPrototypeOf, v = d && d(d(values([])));
      v && v !== r && n.call(v, a) && (p = v);
      var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);
      function defineIteratorMethods(t2) {
        ["next", "throw", "return"].forEach(function(e2) {
          define(t2, e2, function(t3) {
            return this._invoke(e2, t3);
          });
        });
      }
      function AsyncIterator(t2, e2) {
        function invoke(r3, o2, i2, a2) {
          var c2 = tryCatch(t2[r3], t2, o2);
          if ("throw" !== c2.type) {
            var u2 = c2.arg, h2 = u2.value;
            return h2 && "object" == _typeof(h2) && n.call(h2, "__await") ? e2.resolve(h2.__await).then(function(t3) {
              invoke("next", t3, i2, a2);
            }, function(t3) {
              invoke("throw", t3, i2, a2);
            }) : e2.resolve(h2).then(function(t3) {
              u2.value = t3, i2(u2);
            }, function(t3) {
              return invoke("throw", t3, i2, a2);
            });
          }
          a2(c2.arg);
        }
        var r2;
        o(this, "_invoke", {
          value: function value(t3, n2) {
            function callInvokeWithMethodAndArg() {
              return new e2(function(e3, r3) {
                invoke(t3, n2, e3, r3);
              });
            }
            return r2 = r2 ? r2.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
          }
        });
      }
      function makeInvokeMethod(e2, r2, n2) {
        var o2 = h;
        return function(i2, a2) {
          if (o2 === f)
            throw new Error("Generator is already running");
          if (o2 === s) {
            if ("throw" === i2)
              throw a2;
            return {
              value: t,
              done: true
            };
          }
          for (n2.method = i2, n2.arg = a2; ; ) {
            var c2 = n2.delegate;
            if (c2) {
              var u2 = maybeInvokeDelegate(c2, n2);
              if (u2) {
                if (u2 === y)
                  continue;
                return u2;
              }
            }
            if ("next" === n2.method)
              n2.sent = n2._sent = n2.arg;
            else if ("throw" === n2.method) {
              if (o2 === h)
                throw o2 = s, n2.arg;
              n2.dispatchException(n2.arg);
            } else
              "return" === n2.method && n2.abrupt("return", n2.arg);
            o2 = f;
            var p2 = tryCatch(e2, r2, n2);
            if ("normal" === p2.type) {
              if (o2 = n2.done ? s : l, p2.arg === y)
                continue;
              return {
                value: p2.arg,
                done: n2.done
              };
            }
            "throw" === p2.type && (o2 = s, n2.method = "throw", n2.arg = p2.arg);
          }
        };
      }
      function maybeInvokeDelegate(e2, r2) {
        var n2 = r2.method, o2 = e2.iterator[n2];
        if (o2 === t)
          return r2.delegate = null, "throw" === n2 && e2.iterator["return"] && (r2.method = "return", r2.arg = t, maybeInvokeDelegate(e2, r2), "throw" === r2.method) || "return" !== n2 && (r2.method = "throw", r2.arg = new TypeError("The iterator does not provide a '" + n2 + "' method")), y;
        var i2 = tryCatch(o2, e2.iterator, r2.arg);
        if ("throw" === i2.type)
          return r2.method = "throw", r2.arg = i2.arg, r2.delegate = null, y;
        var a2 = i2.arg;
        return a2 ? a2.done ? (r2[e2.resultName] = a2.value, r2.next = e2.nextLoc, "return" !== r2.method && (r2.method = "next", r2.arg = t), r2.delegate = null, y) : a2 : (r2.method = "throw", r2.arg = new TypeError("iterator result is not an object"), r2.delegate = null, y);
      }
      function pushTryEntry(t2) {
        var e2 = {
          tryLoc: t2[0]
        };
        1 in t2 && (e2.catchLoc = t2[1]), 2 in t2 && (e2.finallyLoc = t2[2], e2.afterLoc = t2[3]), this.tryEntries.push(e2);
      }
      function resetTryEntry(t2) {
        var e2 = t2.completion || {};
        e2.type = "normal", delete e2.arg, t2.completion = e2;
      }
      function Context(t2) {
        this.tryEntries = [{
          tryLoc: "root"
        }], t2.forEach(pushTryEntry, this), this.reset(true);
      }
      function values(e2) {
        if (e2 || "" === e2) {
          var r2 = e2[a];
          if (r2)
            return r2.call(e2);
          if ("function" == typeof e2.next)
            return e2;
          if (!isNaN(e2.length)) {
            var o2 = -1, i2 = function next() {
              for (; ++o2 < e2.length; )
                if (n.call(e2, o2))
                  return next.value = e2[o2], next.done = false, next;
              return next.value = t, next.done = true, next;
            };
            return i2.next = i2;
          }
        }
        throw new TypeError(_typeof(e2) + " is not iterable");
      }
      return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", {
        value: GeneratorFunctionPrototype,
        configurable: true
      }), o(GeneratorFunctionPrototype, "constructor", {
        value: GeneratorFunction,
        configurable: true
      }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function(t2) {
        var e2 = "function" == typeof t2 && t2.constructor;
        return !!e2 && (e2 === GeneratorFunction || "GeneratorFunction" === (e2.displayName || e2.name));
      }, e.mark = function(t2) {
        return Object.setPrototypeOf ? Object.setPrototypeOf(t2, GeneratorFunctionPrototype) : (t2.__proto__ = GeneratorFunctionPrototype, define(t2, u, "GeneratorFunction")), t2.prototype = Object.create(g), t2;
      }, e.awrap = function(t2) {
        return {
          __await: t2
        };
      }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function() {
        return this;
      }), e.AsyncIterator = AsyncIterator, e.async = function(t2, r2, n2, o2, i2) {
        void 0 === i2 && (i2 = Promise);
        var a2 = new AsyncIterator(wrap(t2, r2, n2, o2), i2);
        return e.isGeneratorFunction(r2) ? a2 : a2.next().then(function(t3) {
          return t3.done ? t3.value : a2.next();
        });
      }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function() {
        return this;
      }), define(g, "toString", function() {
        return "[object Generator]";
      }), e.keys = function(t2) {
        var e2 = Object(t2), r2 = [];
        for (var n2 in e2)
          r2.push(n2);
        return r2.reverse(), function next() {
          for (; r2.length; ) {
            var t3 = r2.pop();
            if (t3 in e2)
              return next.value = t3, next.done = false, next;
          }
          return next.done = true, next;
        };
      }, e.values = values, Context.prototype = {
        constructor: Context,
        reset: function reset(e2) {
          if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = false, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e2)
            for (var r2 in this)
              "t" === r2.charAt(0) && n.call(this, r2) && !isNaN(+r2.slice(1)) && (this[r2] = t);
        },
        stop: function stop() {
          this.done = true;
          var t2 = this.tryEntries[0].completion;
          if ("throw" === t2.type)
            throw t2.arg;
          return this.rval;
        },
        dispatchException: function dispatchException(e2) {
          if (this.done)
            throw e2;
          var r2 = this;
          function handle(n2, o3) {
            return a2.type = "throw", a2.arg = e2, r2.next = n2, o3 && (r2.method = "next", r2.arg = t), !!o3;
          }
          for (var o2 = this.tryEntries.length - 1; o2 >= 0; --o2) {
            var i2 = this.tryEntries[o2], a2 = i2.completion;
            if ("root" === i2.tryLoc)
              return handle("end");
            if (i2.tryLoc <= this.prev) {
              var c2 = n.call(i2, "catchLoc"), u2 = n.call(i2, "finallyLoc");
              if (c2 && u2) {
                if (this.prev < i2.catchLoc)
                  return handle(i2.catchLoc, true);
                if (this.prev < i2.finallyLoc)
                  return handle(i2.finallyLoc);
              } else if (c2) {
                if (this.prev < i2.catchLoc)
                  return handle(i2.catchLoc, true);
              } else {
                if (!u2)
                  throw new Error("try statement without catch or finally");
                if (this.prev < i2.finallyLoc)
                  return handle(i2.finallyLoc);
              }
            }
          }
        },
        abrupt: function abrupt(t2, e2) {
          for (var r2 = this.tryEntries.length - 1; r2 >= 0; --r2) {
            var o2 = this.tryEntries[r2];
            if (o2.tryLoc <= this.prev && n.call(o2, "finallyLoc") && this.prev < o2.finallyLoc) {
              var i2 = o2;
              break;
            }
          }
          i2 && ("break" === t2 || "continue" === t2) && i2.tryLoc <= e2 && e2 <= i2.finallyLoc && (i2 = null);
          var a2 = i2 ? i2.completion : {};
          return a2.type = t2, a2.arg = e2, i2 ? (this.method = "next", this.next = i2.finallyLoc, y) : this.complete(a2);
        },
        complete: function complete(t2, e2) {
          if ("throw" === t2.type)
            throw t2.arg;
          return "break" === t2.type || "continue" === t2.type ? this.next = t2.arg : "return" === t2.type ? (this.rval = this.arg = t2.arg, this.method = "return", this.next = "end") : "normal" === t2.type && e2 && (this.next = e2), y;
        },
        finish: function finish(t2) {
          for (var e2 = this.tryEntries.length - 1; e2 >= 0; --e2) {
            var r2 = this.tryEntries[e2];
            if (r2.finallyLoc === t2)
              return this.complete(r2.completion, r2.afterLoc), resetTryEntry(r2), y;
          }
        },
        "catch": function _catch(t2) {
          for (var e2 = this.tryEntries.length - 1; e2 >= 0; --e2) {
            var r2 = this.tryEntries[e2];
            if (r2.tryLoc === t2) {
              var n2 = r2.completion;
              if ("throw" === n2.type) {
                var o2 = n2.arg;
                resetTryEntry(r2);
              }
              return o2;
            }
          }
          throw new Error("illegal catch attempt");
        },
        delegateYield: function delegateYield(e2, r2, n2) {
          return this.delegate = {
            iterator: values(e2),
            resultName: r2,
            nextLoc: n2
          }, "next" === this.method && (this.arg = t), y;
        }
      }, e;
    }
    module.exports = _regeneratorRuntime2, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/.pnpm/@babel+runtime@7.22.15/node_modules/@babel/runtime/regenerator/index.js
var require_regenerator = __commonJS({
  "node_modules/.pnpm/@babel+runtime@7.22.15/node_modules/@babel/runtime/regenerator/index.js"(exports, module) {
    var runtime = require_regeneratorRuntime()();
    module.exports = runtime;
    try {
      regeneratorRuntime = runtime;
    } catch (accidentalStrictMode) {
      if (typeof globalThis === "object") {
        globalThis.regeneratorRuntime = runtime;
      } else {
        Function("r", "regeneratorRuntime = r")(runtime);
      }
    }
  }
});

// node_modules/.pnpm/redux-saga-routines@3.2.3_@babel+runtime@7.22.15_redux-saga@1.2.3/node_modules/redux-saga-routines/es/routineStages.js
var TRIGGER = "TRIGGER";
var REQUEST = "REQUEST";
var SUCCESS = "SUCCESS";
var FAILURE = "FAILURE";
var FULFILL = "FULFILL";
var routineStages_default = [TRIGGER, REQUEST, SUCCESS, FAILURE, FULFILL];

// node_modules/.pnpm/redux-actions@2.6.5/node_modules/redux-actions/es/combineActions.js
var import_invariant = __toESM(require_browser());

// node_modules/.pnpm/redux-actions@2.6.5/node_modules/redux-actions/es/utils/isFunction.js
var isFunction_default = function(value) {
  return typeof value === "function";
};

// node_modules/.pnpm/redux-actions@2.6.5/node_modules/redux-actions/es/constants.js
var DEFAULT_NAMESPACE = "/";
var ACTION_TYPE_DELIMITER = "||";

// node_modules/.pnpm/redux-actions@2.6.5/node_modules/redux-actions/es/createAction.js
var import_invariant2 = __toESM(require_browser());

// node_modules/.pnpm/redux-actions@2.6.5/node_modules/redux-actions/es/utils/identity.js
var identity_default = function(value) {
  return value;
};

// node_modules/.pnpm/redux-actions@2.6.5/node_modules/redux-actions/es/utils/isNull.js
var isNull_default = function(value) {
  return value === null;
};

// node_modules/.pnpm/redux-actions@2.6.5/node_modules/redux-actions/es/createAction.js
function createAction(type, payloadCreator, metaCreator) {
  if (payloadCreator === void 0) {
    payloadCreator = identity_default;
  }
  (0, import_invariant2.default)(isFunction_default(payloadCreator) || isNull_default(payloadCreator), "Expected payloadCreator to be a function, undefined or null");
  var finalPayloadCreator = isNull_default(payloadCreator) || payloadCreator === identity_default ? identity_default : function(head) {
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }
    return head instanceof Error ? head : payloadCreator.apply(void 0, [head].concat(args));
  };
  var hasMeta = isFunction_default(metaCreator);
  var typeString = type.toString();
  var actionCreator = function actionCreator2() {
    var payload = finalPayloadCreator.apply(void 0, arguments);
    var action = {
      type
    };
    if (payload instanceof Error) {
      action.error = true;
    }
    if (payload !== void 0) {
      action.payload = payload;
    }
    if (hasMeta) {
      action.meta = metaCreator.apply(void 0, arguments);
    }
    return action;
  };
  actionCreator.toString = function() {
    return typeString;
  };
  return actionCreator;
}

// node_modules/.pnpm/redux-actions@2.6.5/node_modules/redux-actions/es/createActions.js
var import_invariant3 = __toESM(require_browser());

// node_modules/.pnpm/redux-actions@2.6.5/node_modules/redux-actions/es/utils/isPlainObject.js
var isPlainObject_default = function(value) {
  if (typeof value !== "object" || value === null)
    return false;
  var proto = value;
  while (Object.getPrototypeOf(proto) !== null) {
    proto = Object.getPrototypeOf(proto);
  }
  return Object.getPrototypeOf(value) === proto;
};

// node_modules/.pnpm/redux-actions@2.6.5/node_modules/redux-actions/es/utils/camelCase.js
var import_to_camel_case = __toESM(require_to_camel_case());

// node_modules/.pnpm/redux-actions@2.6.5/node_modules/redux-actions/es/utils/isMap.js
var isMap_default = function(value) {
  return typeof Map !== "undefined" && value instanceof Map;
};

// node_modules/.pnpm/redux-actions@2.6.5/node_modules/redux-actions/es/utils/ownKeys.js
function ownKeys(object) {
  if (isMap_default(object)) {
    return Array.from(object.keys());
  }
  if (typeof Reflect !== "undefined" && typeof Reflect.ownKeys === "function") {
    return Reflect.ownKeys(object);
  }
  var keys = Object.getOwnPropertyNames(object);
  if (typeof Object.getOwnPropertySymbols === "function") {
    keys = keys.concat(Object.getOwnPropertySymbols(object));
  }
  return keys;
}

// node_modules/.pnpm/redux-actions@2.6.5/node_modules/redux-actions/es/utils/get.js
function get(key, x) {
  return isMap_default(x) ? x.get(key) : x[key];
}

// node_modules/.pnpm/redux-actions@2.6.5/node_modules/redux-actions/es/utils/flattenWhenNode.js
var flattenWhenNode_default = function(predicate) {
  return function flatten(map, _temp, partialFlatMap, partialFlatActionType) {
    var _ref = _temp === void 0 ? {} : _temp, _ref$namespace = _ref.namespace, namespace = _ref$namespace === void 0 ? DEFAULT_NAMESPACE : _ref$namespace, prefix = _ref.prefix;
    if (partialFlatMap === void 0) {
      partialFlatMap = {};
    }
    if (partialFlatActionType === void 0) {
      partialFlatActionType = "";
    }
    function connectNamespace(type) {
      var _ref2;
      if (!partialFlatActionType)
        return type;
      var types = type.toString().split(ACTION_TYPE_DELIMITER);
      var partials = partialFlatActionType.split(ACTION_TYPE_DELIMITER);
      return (_ref2 = []).concat.apply(_ref2, partials.map(function(p) {
        return types.map(function(t) {
          return "" + p + namespace + t;
        });
      })).join(ACTION_TYPE_DELIMITER);
    }
    function connectPrefix(type) {
      if (partialFlatActionType || !prefix || prefix && new RegExp("^" + prefix + namespace).test(type)) {
        return type;
      }
      return "" + prefix + namespace + type;
    }
    ownKeys(map).forEach(function(type) {
      var nextNamespace = connectPrefix(connectNamespace(type));
      var mapValue = get(type, map);
      if (predicate(mapValue)) {
        flatten(mapValue, {
          namespace,
          prefix
        }, partialFlatMap, nextNamespace);
      } else {
        partialFlatMap[nextNamespace] = mapValue;
      }
    });
    return partialFlatMap;
  };
};

// node_modules/.pnpm/redux-actions@2.6.5/node_modules/redux-actions/es/utils/flattenActionMap.js
var flattenActionMap_default = flattenWhenNode_default(isPlainObject_default);

// node_modules/.pnpm/redux-actions@2.6.5/node_modules/redux-actions/es/createCurriedAction.js
var import_just_curry_it = __toESM(require_just_curry_it());

// node_modules/.pnpm/redux-actions@2.6.5/node_modules/redux-actions/es/handleAction.js
var import_invariant4 = __toESM(require_browser());

// node_modules/.pnpm/redux-actions@2.6.5/node_modules/redux-actions/es/handleActions.js
var import_invariant5 = __toESM(require_browser());

// node_modules/.pnpm/redux-actions@2.6.5/node_modules/redux-actions/es/utils/hasGeneratorInterface.js
function hasGeneratorInterface(handler) {
  var keys = ownKeys(handler);
  var hasOnlyInterfaceNames = keys.every(function(ownKey) {
    return ownKey === "next" || ownKey === "throw";
  });
  return keys.length && keys.length <= 2 && hasOnlyInterfaceNames;
}

// node_modules/.pnpm/redux-actions@2.6.5/node_modules/redux-actions/es/utils/flattenReducerMap.js
var flattenReducerMap_default = flattenWhenNode_default(function(node) {
  return (isPlainObject_default(node) || isMap_default(node)) && !hasGeneratorInterface(node);
});

// node_modules/.pnpm/redux-saga-routines@3.2.3_@babel+runtime@7.22.15_redux-saga@1.2.3/node_modules/redux-saga-routines/es/utils.js
var isFunction = function isFunction2(value) {
  return typeof value === "function";
};
var toCamelCase = function toCamelCase2(value) {
  return String(value).toLowerCase().replace(/_+(\w)/g, function(_, p1) {
    return p1.toUpperCase();
  });
};
var toUpperCase = function toUpperCase2(value) {
  return String(value).toUpperCase();
};
var toLowerCase = function toLowerCase2(value) {
  return String(value).toLowerCase();
};
var getCreatorForType = function getCreatorForType2(type, creator) {
  if (!creator) {
    return creator;
  }
  if (isFunction(creator[type])) {
    return creator[type];
  }
  if (isFunction(creator[toLowerCase(type)])) {
    return creator[toLowerCase(type)];
  }
  if (isFunction(creator[toUpperCase(type)])) {
    return creator[toUpperCase(type)];
  }
  if (isFunction(creator[toCamelCase(type)])) {
    return creator[toCamelCase(type)];
  }
  if (isFunction(creator)) {
    return creator;
  }
  return void 0;
};

// node_modules/.pnpm/redux-saga-routines@3.2.3_@babel+runtime@7.22.15_redux-saga@1.2.3/node_modules/redux-saga-routines/es/createRoutineCreator.js
function createRoutineCreator(stages, separator) {
  if (separator === void 0) {
    separator = "/";
  }
  var stagesArray = stages;
  if (!Array.isArray(stagesArray)) {
    stagesArray = [].concat(stages);
  }
  if (!stages || stagesArray.length === 0) {
    throw new Error("Routine `stages` must not be empty");
  }
  var createRoutine2 = function createRoutine3(typePrefix, payloadCreator, metaCreator) {
    if (typeof typePrefix !== "string") {
      throw new Error("Routine `typePrefix` must be a string");
    }
    var createActionCreator = function createActionCreator2(type) {
      return createAction("" + typePrefix + separator + type, getCreatorForType(type, payloadCreator), getCreatorForType(type, metaCreator));
    };
    var routine = stagesArray.reduce(function(result, stage) {
      var actionCreator = createActionCreator(stage);
      result[toCamelCase(stage)] = actionCreator;
      result[toUpperCase(stage)] = actionCreator.toString();
      return result;
    }, createActionCreator(stagesArray[0]));
    routine._STAGES = stagesArray;
    routine._PREFIX = typePrefix;
    return routine;
  };
  createRoutine2.STAGES = stagesArray;
  return createRoutine2;
}

// node_modules/.pnpm/redux-saga-routines@3.2.3_@babel+runtime@7.22.15_redux-saga@1.2.3/node_modules/redux-saga-routines/es/createRoutine.js
var createRoutine = createRoutineCreator(routineStages_default);
var createRoutine_default = createRoutine;

// node_modules/.pnpm/redux-saga-routines@3.2.3_@babel+runtime@7.22.15_redux-saga@1.2.3/node_modules/redux-saga-routines/es/constants.js
var ROUTINE_PROMISE_ACTION = "@@redux-saga-routines/PROMISE";

// node_modules/.pnpm/redux-saga-routines@3.2.3_@babel+runtime@7.22.15_redux-saga@1.2.3/node_modules/redux-saga-routines/es/promisifyRoutine.js
function promisifyRoutine(routine) {
  return function(payload, dispatch) {
    return new Promise(function(resolve, reject) {
      return dispatch({
        type: ROUTINE_PROMISE_ACTION,
        payload,
        meta: {
          defer: {
            resolve,
            reject
          },
          routine
        }
      });
    });
  };
}

// node_modules/.pnpm/redux-saga-routines@3.2.3_@babel+runtime@7.22.15_redux-saga@1.2.3/node_modules/redux-saga-routines/es/routinePromiseWatcherSaga.js
var import_regenerator = __toESM(require_regenerator());
var _marked = import_regenerator.default.mark(handleRoutinePromiseAction);
var _marked2 = import_regenerator.default.mark(routinePromiseWatcherSaga);
var getPayload = function getPayload2(data) {
  return data && data.payload || data;
};
function handleRoutinePromiseAction(action) {
  var payload, _action$meta, routine, noSuccessPayload, _action$meta$defer, resolve, reject, _yield$all, _yield$all$, success, failure;
  return import_regenerator.default.wrap(function handleRoutinePromiseAction$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          payload = action.payload, _action$meta = action.meta, routine = _action$meta.routine, noSuccessPayload = _action$meta.noSuccessPayload, _action$meta$defer = _action$meta.defer, resolve = _action$meta$defer.resolve, reject = _action$meta$defer.reject;
          _context.next = 3;
          return all([race({
            success: take(routine.SUCCESS),
            failure: take(routine.FAILURE)
          }), put(routine.trigger(payload))]);
        case 3:
          _yield$all = _context.sent;
          _yield$all$ = _yield$all[0];
          success = _yield$all$.success;
          failure = _yield$all$.failure;
          if (!success) {
            _context.next = 12;
            break;
          }
          _context.next = 10;
          return noSuccessPayload ? call(resolve) : call(resolve, getPayload(success));
        case 10:
          _context.next = 14;
          break;
        case 12:
          _context.next = 14;
          return call(reject, getPayload(failure));
        case 14:
        case "end":
          return _context.stop();
      }
    }
  }, _marked);
}
function routinePromiseWatcherSaga() {
  return import_regenerator.default.wrap(function routinePromiseWatcherSaga$(_context2) {
    while (1) {
      switch (_context2.prev = _context2.next) {
        case 0:
          _context2.next = 2;
          return takeEvery$1(ROUTINE_PROMISE_ACTION, handleRoutinePromiseAction);
        case 2:
        case "end":
          return _context2.stop();
      }
    }
  }, _marked2);
}

// node_modules/.pnpm/redux-saga-routines@3.2.3_@babel+runtime@7.22.15_redux-saga@1.2.3/node_modules/redux-saga-routines/es/bindRoutineToReduxForm.js
function bindRoutineToReduxForm(routine, noSuccessPayload) {
  if (noSuccessPayload === void 0) {
    noSuccessPayload = false;
  }
  return function(values, dispatch, props) {
    return new Promise(function(resolve, reject) {
      return dispatch({
        type: ROUTINE_PROMISE_ACTION,
        payload: {
          values,
          props
        },
        meta: {
          defer: {
            resolve,
            reject
          },
          routine,
          noSuccessPayload
        }
      });
    });
  };
}

// node_modules/.pnpm/redux-saga-routines@3.2.3_@babel+runtime@7.22.15_redux-saga@1.2.3/node_modules/redux-saga-routines/es/bindPromiseCreators.js
function bindPromiseCreator(promiseCreator, dispatch) {
  return function(payload) {
    return promiseCreator(payload, dispatch);
  };
}
function bindPromiseCreators(promiseCreators, dispatch) {
  if (typeof promiseCreators === "function") {
    return bindPromiseCreator(promiseCreators, dispatch);
  }
  if (typeof promiseCreators !== "object" || promiseCreators === null) {
    throw new Error("bindPromiseCreators expected an object or a function, instead received " + (promiseCreators === null ? "null" : typeof promiseCreators) + ". ");
  }
  var keys = Object.keys(promiseCreators);
  var boundPromiseCreators = {};
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    var promiseCreator = promiseCreators[key];
    if (typeof promiseCreator === "function") {
      boundPromiseCreators[key] = bindPromiseCreator(promiseCreator, dispatch);
    }
  }
  return boundPromiseCreators;
}
export {
  ROUTINE_PROMISE_ACTION,
  bindPromiseCreators,
  bindRoutineToReduxForm,
  createRoutine_default as createRoutine,
  createRoutineCreator,
  routineStages_default as defaultRoutineStages,
  promisifyRoutine,
  routinePromiseWatcherSaga
};
/*! Bundled license information:

@babel/runtime/helpers/regeneratorRuntime.js:
  (*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE *)
*/
//# sourceMappingURL=redux-saga-routines.js.map
